# Reducing escape time to increase perceived performance
# when using Vim from within Tmux
#
# Ref: https://github.com/tmux/tmux/issues/353#issuecomment-294570322
set-option -s escape-time 11

# Reload config file
bind r source-file ~/.tmux.conf

# Pane Navigation Rebinds
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R

# Pane Resizing Reginds
bind -r K resize-pane -U 5
bind -r J resize-pane -D 5
bind -r H resize-pane -L 5
bind -r L resize-pane -R 5

# Use Telescope Tmux for picking sessions and windows
bind s display-popup -E -w 80% -h 80% nvim -c ":Telescope tmux sessions quit_on_select=true"
bind w display-popup -E -w 80% -h 80% nvim -c ":Telescope tmux windows quit_on_select=true"

unbind Up
unbind Down
unbind Left
unbind Right
unbind C-up
unbind C-Down
unbind C-Left
unbind C-Right

# Don't rename windows automatically
set-option -g allow-rename off

# Start windows and panes at 1
set -g base-index 1
set-window-option -gq -g pane-base-index 1

# Fix for background vim color when in Tmux
#set -g default-terminal "screen-256color"
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",*256col*:Tc"

# Fix Vim mode switching delay
set -s escape-time 0

# Increase history scrollback limit
set -g history-limit 50000

# Increase time Tmux messages are displayed
set -g display-time 4000

# Refresh status more often
set -g status-interval 5

# Aggressively resize when using multiple monitors
set-window-option -gq -g aggressive-resize on

# Pane Navigation
set -g mouse on # I know, I know. It's just for quick scrolling.
set-window-option -gq -g mode-keys vi

# Create Panes: window splitting
# Split vertically
unbind %
bind \\ split-window -h    # Prefix | to create vertical split
# Split horizontally
unbind '"'
bind - split-window -v    # Prefix - to create horizontal split

# Cheatsheet
bind-key -r i run-shell "tmux neww ~/dotfiles/bin/tmux-cht.sh"

# Chris Toomey's Vim-Tmux Navigator
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Set plugin directory
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux/plugins'

# Pomodoro Timer
set -g @plugin 'olimorris/tmux-pomodoro-plus'

# Options
set -g @pomodoro_start 'p'                          # Start a Pomodoro with tmux-prefix + p
set -g @pomodoro_cancel 'P'                         # Cancel a Pomodoro with tmux-prefix key + P

set -g @pomodoro_mins 25                            # The duration of the pomodoro
set -g @pomodoro_break_mins 5                       # The duration of the break after the pomodoro

set -g @pomodoro_on " üçÖ "           # The formatted output when the pomodoro is running
set -g @pomodoro_complete " #[fg=colour2]üèù  "   # The formatted output when the break is running

set -g @pomodoro_notifications 'on'                 # Turn on/off desktop notifications
set -g @pomodoro_sound 'Pop'                        # Sound for desktop notifications (Run `ls /System/Library/Sounds` for a list of sounds to use)

# ----------------------------=== Theme ===--------------------------

# utils
# set() {
# 	local option=$1
# 	local value=$2
# 	tmux set-option -gq "$option" "$value"
# }
#
# set-window-option -gq() {
# 	local option=$1
# 	local value=$2
# 	tmux set-window-option -gq "$option" "$value"
# }

# status
set-option -gq status "on"
set-option -gq  status-bg "#232634"
set-option -gq status-justify "left"
set-option -gq status-left-length "100"
set-option -gq status-right-length "100"

# messages
set-option -gq message-style "fg=#99d1db,bg=#51576d,align=centre"
set-option -gq message-command-style "fg=#99d1db,bg=#51576d,align=centre"

# panes
set-option -gq pane-border-style "fg=#51576d"
set-option -gq pane-active-border-style "fg=#8caaee"

# windows
set-window-option -gq window-status-activity-style "fg=#c6d0f5,bg=#232634,none"
set-window-option -gq window-status-separator ""
set-window-option -gq window-status-style "fg=#c6d0f5,bg=#232634,none"

# --------=== Statusline

set-option -gq status-left ""
set-option -gq status-right "#[fg=#f4b8e4,bg=#232634,nobold,nounderscore,noitalics]ÓÇ∂#[fg=#232634,bg=#f4b8e4,nobold,nounderscore,noitalics]ÔÜÆ #[fg=#c6d0f5,bg=#51576d] #W #{?client_prefix,#[fg=#e78284],#[fg=]}#[bg=#51576d]#[fg=#a6d189]ÓÇ∂#{?client_prefix,#[bg=#e78284],#[bg=#a6d189]}#[fg=#232634]Óûï #[fg=#c6d0f5,bg=#51576d] #S "

# current_dir
set-window-option -gq window-status-format "#[fg=#232634,bg=#8caaee] #I #[fg=#c6d0f5,bg=#51576d] #W "
set-window-option -gq window-status-current-format "#[fg=#232634,bg=#ef9f76] #I #[fg=#c6d0f5,bg=#232634] #W "

# parent_dir/current_dir
# set-window-option -gq window-status-format "#[fg=colour232,bg=colour111] #I #[fg=colour222,bg=colour235] #(echo '#{pane_current_path}' | rev | cut -d'/' -f-2 | rev) "
# set-window-option -gq window-status-current-format "#[fg=colour232,bg=colour208] #I #[fg=colour255,bg=colour237] #(echo '#{pane_current_path}' | rev | cut -d'/' -f-2 | rev) "

# --------=== Modes
set-window-option -gq clock-mode-colour "#8caaee"
set-window-option -gq mode-style "fg=#f4b8e4 bg=#626880 bold"

## List of Plugins
# Plugin Manager
set -g @plugin 'tmux-plugins/tpm'

# Color Scheme (Gruvbox)
#set -g @plugin 'egel/tmux-gruvbox'
#set -g @tmux-gruvbox 'dark'

# Tmux Resurrect
# - Restores tmux sessions on restart
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Tmux Continuum
# - Continuous saving of tmux environment
# - Automatic tmux start when computer is booted
# - Automatic restore when tmux is started
# - Works with Tmux Resurrect
set -g @plugin 'tmux-plugins/tmux-continuum'


set -g @plugin 'tmux-plugins/tmux-battery'

## Initialize TMUX Plugin Manager
## THIS MUST BE THE LAST LINE OF THIS FILE!
run '~/.tmux/plugins/tpm/tpm'
