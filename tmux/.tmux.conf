# Reducing escape time to increase perceived performance
# when using Vim from within Tmux
#
# Ref: https://github.com/tmux/tmux/issues/353#issuecomment-294570322
set-option -s escape-time 11

# Reload config file
bind r source-file ~/.tmux.conf

# Pane Navigation Rebinds
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R

# Pane Resizing Reginds
bind -r K resize-pane -U 5
bind -r J resize-pane -D 5
bind -r H resize-pane -L 5
bind -r L resize-pane -R 5

# Use Telescope Tmux for picking sessions and windows
bind s display-popup -E -w 80% -h 80% nvim -c ":Telescope tmux sessions quit_on_select=true"
bind w display-popup -E -w 80% -h 80% nvim -c ":Telescope tmux windows quit_on_select=true"

unbind Up
unbind Down
unbind Left
unbind Right
unbind C-up
unbind C-Down
unbind C-Left
unbind C-Right

# Don't rename windows automatically
set-option -g allow-rename off

# Start windows and panes at 1
set -g base-index 1
setw -g pane-base-index 1

# Fix for background vim color when in Tmux
#set -g default-terminal "screen-256color"
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",*256col*:Tc"

# Fix Vim mode switching delay
set -s escape-time 0

# Increase history scrollback limit
set -g history-limit 50000

# Increase time Tmux messages are displayed
set -g display-time 4000

# Refresh status more often
set -g status-interval 5


# Aggressively resize when using multiple monitors
setw -g aggressive-resize on

# Pane Navigation
set -g mouse on # I know, I know. It's just for quick scrolling.
setw -g mode-keys vi

# Create Panes: window splitting
# Split vertically
unbind %
bind \\ split-window -h    # Prefix | to create vertical split
# Split horizontally
unbind '"'
bind - split-window -v    # Prefix - to create horizontal split

# Cheatsheet
bind-key -r i run-shell "tmux neww ~/dotfiles/bin/tmux-cht.sh"

# Chris Toomey's Vim-Tmux Navigator
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Set plugin directory
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux/plugins'

# Pomodoro Timer
set -g @plugin 'olimorris/tmux-pomodoro-plus'

# Options
set -g @pomodoro_start 'p'                          # Start a Pomodoro with tmux-prefix + p
set -g @pomodoro_cancel 'P'                         # Cancel a Pomodoro with tmux-prefix key + P

set -g @pomodoro_mins 25                            # The duration of the pomodoro
set -g @pomodoro_break_mins 5                       # The duration of the break after the pomodoro

set -g @pomodoro_on " üçÖ "           # The formatted output when the pomodoro is running
set -g @pomodoro_complete " #[fg=colour2]üèù  "   # The formatted output when the break is running

set -g @pomodoro_notifications 'on'                 # Turn on/off desktop notifications
set -g @pomodoro_sound 'Pop'                        # Sound for desktop notifications (Run `ls /System/Library/Sounds` for a list of sounds to use)

# Statusbar config
set -g status on
# default statusbar color
set-option -g status-style bg=colour237,fg=colour223 # bg=bg1, fg=fg1

# default window title colors
set-window-option -g window-status-style bg=colour214,fg=colour237 # bg=yellow, fg=bg1

# default window with an activity alert
set-window-option -g window-status-activity-style bg=colour237,fg=colour248 # bg=bg1, fg=fg3

# active window title colors
set-window-option -g window-status-current-style bg=red,fg=colour237 # fg=bg1

# pane border
set-option -g pane-active-border-style fg=colour250 #fg2
set-option -g pane-border-style fg=colour237 #bg1

# message infos
set-option -g message-style bg=colour239,fg=colour223 # bg=bg2, fg=fg1

# writing commands inactive
set-option -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1

# pane number display
set-option -g display-panes-active-colour colour250 #fg2
set-option -g display-panes-colour colour237 #bg1

# clock
set-window-option -g clock-mode-colour colour109 #blue

# bell
set-window-option -g window-status-bell-style bg=colour167,fg=colour235 # bg=red, fg=bg

## Theme settings mixed with colors (unfortunately, but there is no cleaner way)
set-option -g status-justify "left"
set-option -g status-left-style none
set-option -g status-left-length "80"
set-option -g status-right-style none
set-option -g status-right-length "80"
set-window-option -g window-status-separator ""

set-option -g status-left "#[bg=colour241,fg=colour248] #S #[bg=colour237,fg=colour241,nobold,noitalics,nounderscore]ÓÇ∞"
set-option -g status-right "#[bg=colour237,fg=colour239 nobold, nounderscore, noitalics]ÓÇ≤#[bg=colour239,fg=colour246]#{pomodoro_status}ÓÇ≥#[bg=colour237,fg=colour239 nobold, nounderscore, noitalics]#[bg=colour239,fg=colour246] %Y-%m-%d ÓÇ≥ %H:%M #[bg=colour239,fg=colour248,nobold,noitalics,nounderscore]ÓÇ≤#[bg=colour248,fg=colour237] #h "
#set-option -g status-right "#[bg=colour237,fg=colour239 nobold, nounderscore, noitalics]ÓÇ≤#[bg=colour239,fg=colour246] %Y-%m-%d ÓÇ≥ %H:%M #[bg=colour239,fg=colour248,nobold,noitalics,nounderscore]ÓÇ≤#[bg=colour248,fg=colour237] #h "

set-window-option -g window-status-current-format "#[bg=colour214,fg=colour237,nobold,noitalics,nounderscore]ÓÇ∞#[bg=colour214,fg=colour239] #I ÓÇ±#[bg=colour214,fg=colour239,bold] #W#{?window_zoomed_flag,*Z,} #[bg=colour237,fg=colour214,nobold,noitalics,nounderscore]ÓÇ∞"
set-window-option -g window-status-format "#[bg=colour239,fg=colour237,noitalics]ÓÇ∞#[bg=colour239,fg=colour223] #I ÓÇ±#[bg=colour239,fg=colour223] #W #[bg=colour237,fg=colour239,noitalics]ÓÇ∞"

# vim: set ft=tmux tw=0 nowrap:

## List of Plugins
# Plugin Manager
set -g @plugin 'tmux-plugins/tpm'

# Color Scheme (Gruvbox)
#set -g @plugin 'egel/tmux-gruvbox'
#set -g @tmux-gruvbox 'dark'

# Tmux Resurrect
# - Restores tmux sessions on restart
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Tmux Continuum
# - Continuous saving of tmux environment
# - Automatic tmux start when computer is booted
# - Automatic restore when tmux is started
# - Works with Tmux Resurrect
set -g @plugin 'tmux-plugins/tmux-continuum'


set -g @plugin 'tmux-plugins/tmux-battery'

## Initialize TMUX Plugin Manager
## THIS MUST BE THE LAST LINE OF THIS FILE!
run '~/.tmux/plugins/tpm/tpm'
